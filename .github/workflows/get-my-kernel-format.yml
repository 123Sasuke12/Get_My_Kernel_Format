name: Process boot.img from URL

on:
  workflow_dispatch: # Allow manual triggering of the workflow
    inputs:
      boot_img_url:
        description: "URL to download the boot.img file"
        required: true
        type: string
        default: "https://filebin.net/gp05fto9lulm3qwg/boot.img"  # Default URL if not provided

jobs:
  process-boot-img:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Download boot.img from the provided URL
      - name: Download boot.img
        run: |
          curl -L -o boot.img "${{ github.event.inputs.boot_img_url }}"
          if [ ! -f "boot.img" ]; then
            echo "Failed to download boot.img. Exiting."
            exit 1
          fi

      # Step 3: Ensure magiskboot is executable and process boot.img
      - name: Process boot.img
        continue-on-error: true
        run: |
          # Ensure magiskboot is executable
          chmod +x magiskboot

          # Run magiskboot and capture output
          OUTPUT=$(./magiskboot unpack boot.img)
          echo "$OUTPUT"  # Print the entire output for debugging

          # Extract the full KERNEL_FMT line
          NAME=$(echo "$OUTPUT" | grep 'KERNEL_FMT')

          # Add 5 tabs in front of each line of the OUTPUT and save to a file
          echo "$OUTPUT" > "${NAME}.txt"

          echo "KERNEL_FILE=${NAME}.txt" >> $GITHUB_ENV

      # Step 4: Commit and Push the New File
      - name: Commit and Push
        env:
          FILE_NAME: ${{ env.KERNEL_FILE }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Add the new file
          git add "$FILE_NAME"
          
          # Commit the change
          git commit -m "found kernel format: $FILE_NAME"
          
          # Push the change
          git push
